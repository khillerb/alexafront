[{"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/index.js":"1","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/App.js":"2","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/reportWebVitals.js":"3","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/pages/App/userPage.jsx":"4","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/service/userService.js":"5","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/NavBar/NavBar.jsx":"6","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/pages/App/responsePage.jsx":"7","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/service/responseService.js":"8","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/ResponseSearch/responseSearch.jsx":"9","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/UserSearch/userSearch.jsx":"10","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/User/user.jsx":"11","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/Response/response.jsx":"12","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/UserCreate/userCreate.jsx":"13","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/ResponseCreate/responseCreate.jsx":"14"},{"size":535,"mtime":1612884887804,"results":"15","hashOfConfig":"16"},{"size":1453,"mtime":1613057998087,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612195264372,"results":"18","hashOfConfig":"16"},{"size":1149,"mtime":1612808224075,"results":"19","hashOfConfig":"16"},{"size":2529,"mtime":1613055434233,"results":"20","hashOfConfig":"16"},{"size":2812,"mtime":1612976634268,"results":"21","hashOfConfig":"16"},{"size":1198,"mtime":1612815481704,"results":"22","hashOfConfig":"16"},{"size":2192,"mtime":1613060552787,"results":"23","hashOfConfig":"16"},{"size":3600,"mtime":1613054972596,"results":"24","hashOfConfig":"16"},{"size":4294,"mtime":1613054530707,"results":"25","hashOfConfig":"16"},{"size":2398,"mtime":1613005922423,"results":"26","hashOfConfig":"16"},{"size":2383,"mtime":1613056076804,"results":"27","hashOfConfig":"16"},{"size":2647,"mtime":1613059371358,"results":"28","hashOfConfig":"16"},{"size":2157,"mtime":1613060318962,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"i5efjn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/index.js",[],["67","68"],"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/App.js",["69"],"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/reportWebVitals.js",[],"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/pages/App/userPage.jsx",["70","71","72"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport userService from '../../service/userService';\n\nconst UserPage = (props) => {\n  const [users, setUsers] = useState([{}]);\n  const [change, setChange] = useState({});\n  useEffect(()=>{\n    userService.getUsers().then(res => {\n      setUsers(res.data)\n      console.log(res.data)\n    })\n  }, [props, change])\n  \n\nreturn (\n    <div>\n      <h1 className=\"text-center\">User List</h1>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <td>User Id</td>\n            <td>User First Name</td>\n            <td>User Last Name</td>\n            <td>User Email</td>\n            <td>User Group</td>\n          </tr>\n          \n        </thead>\n        <tbody>\n          {users.map(\n              user =>\n              <tr key = {user.id}>\n                <td>{user.id}</td>\n                <td>{user.firstName}</td>\n                <td>{user.lastName}</td>\n                <td>{user.email}</td>\n                <td>{user.group}</td>\n              </tr>)}\n        </tbody>\n\n      </table>\n\n    </div>\n  );\n}\n\nexport default UserPage;\n","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/service/userService.js",["73"],"import axios from 'axios';\nconst endpoint = 'http://52.254.93.227:8080/api/user/';\n\nexport default {\n    getUsers,\n    getUsersByEmail,\n    getUsersByGroup,\n    getUsersByName,\n    getUsersById,\n    createUser,\n    updateUser\n};\nfunction getUsers(){\n    const options = {\n        url: endpoint,\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n    };\n    return axios(options).then();\n}\nfunction getUsersByEmail(email){ \n    const options = {\n        url: endpoint + \"byEmail\",\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        data: {\n            email : email\n        }\n    };\n    return axios(options).then();\n}\nfunction getUsersById(id){\n    const options = {\n        url: endpoint + `byId/${id}`,\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n    };\n    return axios(options).then();\n}\nfunction getUsersByGroup(group){\n    const options = {\n        url: endpoint + `byGroup/${group}`,\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n    };\n    return axios(options).then();\n}\nfunction getUsersByName(fname,lname){\n    const options = {\n        url: endpoint + `byName/${fname}/${lname}`,\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n    };\n    return axios(options).then();\n}\nfunction createUser(formData) {\n    const options = {\n        url: endpoint,\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        data: formData\n    };\n    return axios(options).then(response => {\n        return response;\n    }, (error) => {\n        console.log(error);\n    });\n}\nfunction updateUser(formData) {\n    const options = {\n        url: endpoint + `${formData.id}`,\n        method: 'PUT',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n        },\n        data: formData\n    };\n    return axios(options).then(response => {\n        return response;\n    }, (error) => {\n        console.log(error);\n    });\n}","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/NavBar/NavBar.jsx",["74","75","76","77","78","79","80","81"],"import React, { Component } from 'react';\nimport { Route, Switch,Link } from 'react-router-dom';\nimport bootstrap from 'bootstrap';\nimport popper from 'popper.js';\nimport '../../bootstrap.min.css';\n\nclass NavBar extends Component {\n    constructor(){\n        super();\n    }\n    render(){\n        return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                        <Link to=\"/\" className='nav-link'>Home</Link>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownUser\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                Users\n                            </a>\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownUser\">\n                                <li><Link className=\"dropdown-item\" to=\"/users\">All Users</Link></li>\n                                <li><Link className=\"dropdown-item\" to=\"/users/search\">Search Users</Link></li>\n                                <li><Link className=\"dropdown-item\" to=\"/users/create\">Create User</Link></li>\n                            </ul>\n                        </li>\n                        <li className=\"nav-item dropdown\">\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                Responses\n                            </a>\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                <li><Link className=\"dropdown-item\" to=\"/responses\">All Responses</Link></li>\n                                <li><Link className=\"dropdown-item\" to=\"/responses/search\">Search Responses</Link></li>\n                                <li><Link className=\"dropdown-item\" to=\"/responses/create\">Create Response</Link></li>\n                            </ul>\n                        </li>\n                    </ul>\n                    </div>\n                </div>\n                </nav>\n        </div>\n        )\n    }\n}\nexport default NavBar;","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/pages/App/responsePage.jsx",["82","83","84"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport responseService from '../../service/responseService';\n\nconst ResponsePage = (props) => {\n  const [responses, setResponses] = useState([{}]);\n  const [change, setChange] = useState({});\n  useEffect(()=>{\n    responseService.getResponses().then(res => {\n      setResponses(res.data)\n      console.log(res.data)\n    })\n  }, [props, change])\n  \n    return (\n        <div>\n        <h1 className=\"text-center\">Response List</h1>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <td>Response Id</td>\n              <td>Response Key</td>\n              <td>Response Value</td>\n              <td>Response Group</td>\n            </tr>\n            \n          </thead>\n          <tbody>\n            {responses.map(\n                response =>\n                <tr key = {response.id}>\n                  <td>{response.id}</td>\n                  <td>{response.key}</td>\n                  <td>{response.value}</td>\n                  <td>{response.group}</td>\n                </tr>)}\n          </tbody>\n  \n        </table>\n  \n      </div>\n    )\n}\nexport default ResponsePage","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/service/responseService.js",["85"],"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/ResponseSearch/responseSearch.jsx",["86","87","88","89","90"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport responseService from '../../service/responseService';\nimport Response from '../Response/response';\n\n\nconst ResponseSearch = (props) => {\n    const [responses, setResponses] = useState([{}]);\n    const [change, setChange] = useState({});\n    const [search, setSearch] = useState({});\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(search);\n        if (search.type == \"group\") {\n            responseService.getResponsesByUserGroup(search.term).then(res => {\n                setResponses(res.data)\n                console.log(res)\n                console.log(res.data)\n                let list = res.data;\n                console.log(responses)\n                setChange(!change)\n            });\n        } \n        if (search.type == \"type\") {\n            responseService.getResponsesByType(search.term).then(res => {\n                setResponses(res.data)\n                console.log(res)\n                console.log(res.data)\n                let list = res.data;\n                console.log(responses)\n                setChange(!change)\n            });\n        }\n        //let unique_list = new Set(list); \n        //list = Array.from(unique_list); \n    }\n    \n    return (\n        <div>\n            <form className=\"form-horizontal\" onSubmit={handleSubmit}>\n            <fieldset>\n\n            <legend>Search for Response</legend>\n\n            <div className=\"form-group\">\n            <div className=\"col-lg-8\">\n                <Link to=\"/responses/create\"><button type=\"button\" class=\"btn btn-success\">Create</button></Link>\n            </div>\n            </div>\n\n            <div className=\"form-group\">\n            <label className=\"col-lg-8 control-label\" for=\"searchinput\">Input Keyword</label>\n            <div className=\"col-lg-8\">\n                <input id=\"searchinput\" onChange={ evt => setSearch({...search, ...{term: evt.target.value}})} name=\"searchinput\" type=\"search\"  placeholder=\"EX: 1A2B3C\" className=\"form-control input-md\"/>\n            </div>\n            </div>\n\n            <div className=\"form-group\">\n            <label className=\"col-lg-8 control-label\" htmlFor=\"selectbasic\">Search Type</label>\n            <div className=\"col-lg-8\">\n                <select id=\"selectbasic\" onChange={ evt => setSearch({...search, ...{type: evt.target.value}})} name=\"selectbasic\" className=\"form-control\" >\n                <option value=\"none\">None</option>\n                <option value=\"group\">By Group</option>\n                <option value=\"type\">By Type</option>\n                </select>\n            </div>\n            </div>\n            <div className=\"form-group\">\n            <div className=\"col-lg-8\">\n                <button type=\"submit\" id=\"singlebutton\" name=\"singlebutton\" className=\"btn btn-primary\">Submit</button>\n            </div>\n            </div>\n\n            </fieldset>\n            </form>\n            <br/>\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-md h-75\">User Id\n                    </div>\n                    <div class=\"col-md h-75\">User Key\n                    </div>\n                    <div class=\"col-md h-75\">User Value\n                    </div>\n                    <div class=\"col-md h-75\">User Group\n                    </div>\n                </div>\n                <br/>\n                {responses.map( (response,idx) => <Response key={idx} response={response} />)}\n            </div>\n\n        </div>\n    )\n}\nexport default ResponseSearch;","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/UserSearch/userSearch.jsx",["91","92","93","94","95","96"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../service/userService';\nimport User from '../User/user'\n\nconst UserSearch = (props) => {\n    const [users, setUsers] = useState([{}]);\n    const [change, setChange] = useState({});\n    const [search, setSearch] = useState({});\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        console.log(search);\n        if (search.type == \"group\") {\n            userService.getUsersByGroup(search.term).then(res => {\n                setUsers(res.data)\n                console.log(res)\n                console.log(res.data)\n                let list = res.data;\n                console.log(users)\n                setChange(!change)\n            });\n        } \n        if (search.type == \"email\") {\n            userService.getUsersByEmail(search.term).then(res => {\n                console.log(res)\n                let list = JSON.stringify(res.data) \n                setUsers(res.data);\n                console.log(users)\n                setChange(!change);\n            });\n        }\n        if (search.type == \"name\") {\n            userService.getUsersByName(search.term,search.term2).then(res => {\n                setUsers(res.data)\n                console.log(res)\n                console.log(res.data)\n                setChange(!change)\n            });\n        }\n    }\n    \n    return (\n        <div>\n            <form className=\"form-horizontal\" onSubmit={handleSubmit}>\n            <fieldset>\n\n            \n            <legend>Search for User</legend>\n\n            <div className=\"form-group\">\n            <div className=\"col-lg-8\">\n                <Link to=\"/users/create\"><button type=\"button\" class=\"btn btn-success\">Create</button></Link>\n            </div>\n            </div>\n\n            <div className=\"form-group\">\n            <label className=\"col-lg-8 control-label\" for=\"searchinput\">Input Keyword</label>\n            <div className=\"col-lg-8\">\n                <input id=\"searchinput\" onChange={ evt => setSearch({...search, ...{term: evt.target.value}})} name=\"searchinput\" type=\"search\"  placeholder=\"EX: 1A2B3C\" className=\"form-control input-md\"/>\n            </div>\n            </div>\n            <div className=\"form-group\">\n            <label className=\"col-lg-8 control-label\" for=\"searchinput\">Or Last Name if searching by name</label>\n            <div className=\"col-lg-8\">\n                <input id=\"searchinput\" onChange={ evt => setSearch({...search, ...{term2: evt.target.value}})} name=\"searchinput\" type=\"search\"  placeholder=\"EX: Harrsion\" className=\"form-control input-md\"/>\n            </div>\n            </div>\n\n            <div className=\"form-group\">\n            <label className=\"col-lg-8 control-label\" htmlFor=\"selectbasic\">Search Type</label>\n            <div className=\"col-lg-8\">\n                <select id=\"selectbasic\" onChange={ evt => setSearch({...search, ...{type: evt.target.value}})} name=\"selectbasic\" className=\"form-control\" >\n                <option value=\"none\">None</option>\n                <option value=\"group\">By Group</option>\n                <option value=\"email\">By Email</option>\n                <option value=\"name\">By Name</option>\n                </select>\n            </div>\n            </div>\n            <div className=\"form-group\">\n            <div className=\"col-lg-8\">\n                <button type=\"submit\" id=\"singlebutton\" name=\"singlebutton\" className=\"btn btn-primary\">Submit</button>\n            </div>\n            </div>\n\n            </fieldset>\n            </form>\n            <br/>\n            <div class=\"container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-md h-75\">User Id\n                    </div>\n                    <div class=\"col-md h-75\">User firstName\n                    </div>\n                    <div class=\"col-md h-75\">User lastName\n                    </div>\n                    <div class=\"col-md h-75\">User email\n                    </div>\n                    <div class=\"col-md h-75\">User custGroup\n                    </div>\n                </div>\n                <br/>\n                {users.map( (user,idx) => <User key={idx} user={user} />)}\n            </div>            \n\n        </div>\n    )\n}\nexport default UserSearch;","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/User/user.jsx",["97","98","99"],"import React, {useState} from 'react';\nimport { useForm } from 'react-hook-form';\nimport userService from '../../service/userService';\n\nconst User = (props) => {\n    const [viewMode, setViewMode] = useState(true);\n    const [formData, setFormData] = useState({});\n    const [change, setChange] = useState({});\n    const defaults = {\n        firstName: props.user.firstName,\n        lastName: props.user.lastName,\n        email: props.user.email,\n        group: props.user.group,\n    };\n    const {register, handleSubmit, errors} = useForm({ mode: 'onSubmit', defaultValues: defaults});\n    const onSubmit = (data) => {\n        data.id = props.user.id    \n        data.userEchoID = props.user.userEchoID    \n        console.log(data);\n        userService.updateUser(data).then(res => {\n            console.log(res);\n            setChange(!change);\n            setViewMode(true);\n        });\n\n    }\n    return(\n        viewMode ? (\n            <div className=\"row\">\n                <div className=\"col-md h-75\"><button className=\"btn btn-light btn-outline-info\" onClick={()=>setViewMode(false)}> Update </button></div>\n                <div className=\"col-md h-75\">{props.user.firstName}</div>\n                <div className=\"col-md h-75\">{props.user.lastName}</div>\n                <div className=\"col-md h-75\">{props.user.email}</div>\n                <div className=\"col-md h-75\">{props.user.group}</div>\n            </div>         \n        ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                <div className=\"col-md h-75\"><button type=\"submit\" id=\"singlebutton\" name=\"singlebutton\" className=\"btn btn-primary\">Update</button></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"firstName\" name=\"firstName\" type=\"text\" placeholder={props.user.firstName}></input></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"lastName\" name=\"lastName\" type=\"text\" placeholder={props.user.lastName}></input></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"email\" name=\"email\" type=\"text\"  placeholder={props.user.email}></input></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"custGroup\" name=\"group\" type=\"text\"  placeholder={props.user.group}></input></div>\n                </div>\n            </form>\n        )\n    )\n}\n\nexport default User;\n","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/Response/response.jsx",["100","101","102"],"import React, {useState} from 'react';\nimport { useForm } from 'react-hook-form';\nimport responseService from '../../service/responseService';\n\nconst Response = (props) => {\n    const [viewMode, setViewMode] = useState(true);\n    const [formData, setFormData] = useState({});\n    const [change, setChange] = useState({});\n    const defaultValues = {\n        id: props.response.id,\n        key: props.response.key,\n        value: props.response.value,\n        group: props.response.group,\n    };\n\n    const {register, handleSubmit, errors} = useForm({ mode: 'onSubmit', defaultValues: defaultValues});\n    const onSubmit = (data) => {\n        data.id = props.response.id   \n        console.log(data);\n        responseService.updateResponse(data).then(res => {\n            console.log(res);\n            setChange(!change);\n            setViewMode(true);\n        });\n\n    }\n\n    return(\n        viewMode ? (\n            <div className=\"row\">\n                <div className=\"col-md h-75\"><button className=\"btn btn-light btn-outline-info\" onClick={()=>setViewMode(false)}> Update </button></div>\n                <div className=\"col-md h-75\">{props.response.id}</div>\n                <div className=\"col-md h-75\">{props.response.key}</div>\n                <div className=\"col-md h-75\">{props.response.value}</div>\n                <div className=\"col-md h-75\">{props.response.group}</div>\n            </div>         \n        ) : (\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"row\">\n                <div className=\"col-md h-75\"><button type=\"submit\" id=\"singlebutton\" name=\"singlebutton\" className=\"btn btn-primary\">Update</button></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"id\" name=\"id\" type=\"text\" value={props.response.id} placeholder={props.response.id}></input></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"key\" name=\"key\" type=\"text\" placeholder={props.response.key}></input></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"value\" name=\"value\" type=\"text\"  placeholder={props.response.value}></input></div>\n                <div className=\"col-md h-75\"><input ref={register} id=\"group\" name=\"group\" type=\"text\"  placeholder={props.response.group}></input></div>\n                </div>\n            </form>\n        )\n    )\n}\n\nexport default Response;\n","/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/UserCreate/userCreate.jsx",["103","104","105","106"],"/Users/keenanhillerbrand/Desktop/reactfront/alexafront/src/components/ResponseCreate/responseCreate.jsx",["107","108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":8,"nodeType":"117","messageId":"118","endLine":1,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":15},{"ruleId":"115","severity":1,"message":"120","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"115","severity":1,"message":"121","line":7,"column":18,"nodeType":"117","messageId":"118","endLine":7,"endColumn":27},{"ruleId":"122","severity":1,"message":"123","line":4,"column":1,"nodeType":"124","endLine":12,"endColumn":3},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":15},{"ruleId":"115","severity":1,"message":"120","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"115","severity":1,"message":"125","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":17},{"ruleId":"115","severity":1,"message":"126","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":8,"column":5,"nodeType":"129","messageId":"130","endLine":10,"endColumn":6},{"ruleId":"131","severity":1,"message":"132","line":16,"column":21,"nodeType":"133","endLine":16,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":26,"column":29,"nodeType":"133","endLine":26,"endColumn":164},{"ruleId":"131","severity":1,"message":"132","line":36,"column":29,"nodeType":"133","endLine":36,"endColumn":160},{"ruleId":"115","severity":1,"message":"119","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":15},{"ruleId":"115","severity":1,"message":"120","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"115","severity":1,"message":"121","line":7,"column":18,"nodeType":"117","messageId":"118","endLine":7,"endColumn":27},{"ruleId":"122","severity":1,"message":"123","line":4,"column":1,"nodeType":"124","endLine":11,"endColumn":2},{"ruleId":"115","severity":1,"message":"134","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":15,"column":25,"nodeType":"137","messageId":"138","endLine":15,"endColumn":27},{"ruleId":"115","severity":1,"message":"139","line":20,"column":21,"nodeType":"117","messageId":"118","endLine":20,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":25,"column":25,"nodeType":"137","messageId":"138","endLine":25,"endColumn":27},{"ruleId":"115","severity":1,"message":"139","line":30,"column":21,"nodeType":"117","messageId":"118","endLine":30,"endColumn":25},{"ruleId":"115","severity":1,"message":"134","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"136","line":14,"column":25,"nodeType":"137","messageId":"138","endLine":14,"endColumn":27},{"ruleId":"115","severity":1,"message":"139","line":19,"column":21,"nodeType":"117","messageId":"118","endLine":19,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":24,"column":25,"nodeType":"137","messageId":"138","endLine":24,"endColumn":27},{"ruleId":"115","severity":1,"message":"139","line":27,"column":21,"nodeType":"117","messageId":"118","endLine":27,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":33,"column":25,"nodeType":"137","messageId":"138","endLine":33,"endColumn":27},{"ruleId":"115","severity":1,"message":"140","line":7,"column":12,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"115","severity":1,"message":"141","line":7,"column":22,"nodeType":"117","messageId":"118","endLine":7,"endColumn":33},{"ruleId":"115","severity":1,"message":"142","line":15,"column":36,"nodeType":"117","messageId":"118","endLine":15,"endColumn":42},{"ruleId":"115","severity":1,"message":"140","line":7,"column":12,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"115","severity":1,"message":"141","line":7,"column":22,"nodeType":"117","messageId":"118","endLine":7,"endColumn":33},{"ruleId":"115","severity":1,"message":"142","line":16,"column":36,"nodeType":"117","messageId":"118","endLine":16,"endColumn":42},{"ruleId":"115","severity":1,"message":"134","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"140","line":7,"column":12,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"115","severity":1,"message":"141","line":7,"column":21,"nodeType":"117","messageId":"118","endLine":7,"endColumn":32},{"ruleId":"115","severity":1,"message":"142","line":13,"column":36,"nodeType":"117","messageId":"118","endLine":13,"endColumn":42},{"ruleId":"115","severity":1,"message":"134","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"140","line":7,"column":12,"nodeType":"117","messageId":"118","endLine":7,"endColumn":20},{"ruleId":"115","severity":1,"message":"141","line":7,"column":21,"nodeType":"117","messageId":"118","endLine":7,"endColumn":32},{"ruleId":"115","severity":1,"message":"142","line":14,"column":36,"nodeType":"117","messageId":"118","endLine":14,"endColumn":42},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'setChange' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'bootstrap' is defined but never used.","'popper' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'list' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]